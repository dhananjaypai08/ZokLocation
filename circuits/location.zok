def swap_max_min<N>(field a, field b) -> field[N] {
    bool a_lt_b = a < b;
    field max = if a_lt_b { b } else { a };
    field min = if a_lt_b { a } else { b };
    return [max, min];
}

def main(
    private field x1, private field y1,   // Private person position
    field x2, field y2,                   // Public reference point
    field threshold_squared               // Public thresholdÂ²
) -> bool {
    field[2] res = swap_max_min(x1, x2);
    field mut sorted_x1 = res[0];
    field mut sorted_x2 = res[1];

    // Swap y1, y2 so that sorted_y1 >= sorted_y2
    field[2] res = swap_max_min(y1, y2);
    field mut sorted_y1 = res[0];
    field mut sorted_y2 = res[1];

    assert(sorted_x1>=sorted_x2);
    assert(sorted_y1>=sorted_y2);
    field dx = sorted_x1 - sorted_x2;
    field dy = sorted_y1 - sorted_y2;

    field dx2 = dx * dx;
    field dy2 = dy * dy;

    field distance_squared = dx2 + dy2;

    bool within_threshold = distance_squared <= threshold_squared;
    assert(within_threshold);
    return true;
}